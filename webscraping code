from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException, StaleElementReferenceException
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import psycopg2
import pandas as pd

driver = webdriver.Edge()

base_url = 'https://247foods.ng/product/categories/grocerydaily-needs-store?page='
current_page = 2

# Lists to store scraped data
name = []
price = []

while True:
    try:
        driver.get(base_url + str(current_page))
        print(f"Scraping page {current_page}...")

        # Wait for the products to load
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, './/div[contains(@class, "products-category")]'))
        )

        # Scrape product details
        item_container = driver.find_element(By.XPATH, './/div[contains(@class, "products-category")]')
        items = item_container.find_elements(By.CLASS_NAME, 'product-item-container')
        if not items:
            print(f"No items found on page {current_page}")
            break
        
        for item in items:
            try:
                product_name = item.find_element(By.XPATH, './/a[contains(@data-placement, "top")]').text
                product_price = item.find_element(By.CLASS_NAME, 'total-price').text
                name.append(product_name)
                price.append(product_price)
                print(f"Product: {product_name}, Price: {product_price}")
            except StaleElementReferenceException:
                print(f"Stale element found on page {current_page}, retrying...")

        # Move to the next page
        current_page += 1

        # Add delay to simulate real user browsing
        time.sleep(2)

    except NoSuchElementException:
        print(f"No more pages to scrape. Last page scraped: {current_page - 1}")
        break

# save to a dataframe
df = pd.DataFrame ({
    'name' : name,
    'price' : price
})

# connect to my dabatase
conn = psycopg2.connect(
    host = 'localhost',
    user = '',
    database = '',
    port = 5434,
    password = ''
)

cur = conn.cursor()

cur.execute (
    '''
    CREATE TABLE product_details (
        id SERIAL PRIMARY KEY,
        name VARCHAR,
        price VARCHAR
    )
'''
)

for i in range(len(df)):
    cur.execute("""
        INSERT INTO product_details (name, price) VALUES (%s, %s);
    """, (df.loc[i, 'name'], df.loc[i, 'price']))

conn.commit()
conn.close()
cur.close()
driver.quit()
